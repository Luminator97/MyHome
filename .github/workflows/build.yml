name: Build MyHome

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      # Download Gradle with retries + IPv4 and a fallback mirror
      - name: Install Gradle 8.9 (retry + IPv4 + mirror)
        shell: bash
        run: |
          set -eux
          URL_PRIMARY="https://services.gradle.org/distributions/gradle-8.9-bin.zip"
          URL_MIRROR="https://downloads.gradle-dn.com/distributions/gradle-8.9-bin.zip"

          curl -4 --retry 5 --retry-all-errors --connect-timeout 20 -L "$URL_PRIMARY" -o gradle.zip \
          || curl -4 --retry 5 --retry-all-errors --connect-timeout 20 -L "$URL_MIRROR" -o gradle.zip

          unzip -q gradle.zip -d "$HOME"
          echo "$HOME/gradle-8.9/bin" >> "$GITHUB_PATH"
          gradle --version

      # If wrapper scripts exist but the JAR isn't committed, generate it;
      # otherwise just continue. This keeps your repo wrapper-friendly.
      - name: Bootstrap Gradle wrapper (if needed)
        shell: bash
        run: |
          set -eux
          if [ -f "gradle/wrapper/gradle-wrapper.properties" ] && [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            gradle wrapper --gradle-version 8.9
          fi
          if [ -f "./gradlew" ]; then chmod +x ./gradlew || true; fi
          ls -la || true

      # Build using wrapper if present; otherwise use the installed Gradle
      - name: Build (no-daemon, stacktrace)
        shell: bash
        run: |
          set -eux
          if [ -x "./gradlew" ]; then
            ./gradlew build --no-daemon --stacktrace
          else
            gradle build --no-daemon --stacktrace
          fi
          echo "=== Built files ==="
          find build -maxdepth 3 -type f -print || true

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyHome-${{ github.sha }}
          path: |
            build/libs/*.jar
            build/libs/**/*.jar
          if-no-files-found: error
